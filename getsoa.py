'''
    Module used to fetch SOA (domain and IP) records for the given target domain
'''

from scapy.all import DNS, DNSQR, IP, UDP, sr1
import utils

def expandLayers(x, payload):
    yield getattr(x, payload)
    while x.payload:
        x = x.payload
        yield getattr(x, payload)

def getSoaForDomain(args):
    # authoritative nameserver's domain (ask Google :P)
    ans = sr1(IP(dst="8.8.8.8") / UDP(sport=utils.getRandomPort()) / DNS(qd=DNSQR(qname=args.targetDomain, qtype=6))) # query nameserver for SOA (start of authority) record of targetDomain, this answer will be used as src for the packet that poisons the vicitim's cache
    args.soaDomain = list(expandLayers(ans[DNS].an, 'rdata')) # get the authoritative nameservers' domain
    for p in args.soaDomain:
		print p
	
    # authoritative nameserver's IP (ask Google, again)
    args.soaIP = list()
    for x in args.soaDomain:
        ans = sr1(IP(dst="8.8.8.8") / UDP(sport=utils.getRandomPort()) / DNS(qd=DNSQR(qname=x)))
        args.soaIP.append(ans[DNS].an.rdata) # get the authoritative nameserver's IP
